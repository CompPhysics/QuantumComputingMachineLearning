Traceback (most recent call last):
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Read the experimental data with Pandas
Masses = pd.read_fwf(infile, usecols=(2,3,4,6,11),
              names=('N', 'Z', 'A', 'Element', 'Ebinding'),
              widths=(1,3,5,5,5,1,3,4,1,13,11,11,9,1,2,11,9,1,3,1,12,11,1),
              header=39,
              index_col=False)

# Extrapolated values are indicated by '#' in place of the decimal place, so
# the Ebinding column won't be numeric. Coerce to float and drop these entries.
Masses['Ebinding'] = pd.to_numeric(Masses['Ebinding'], errors='coerce')
Masses = Masses.dropna()
# Convert from keV to MeV.
Masses['Ebinding'] /= 1000

# Group the DataFrame by nucleon number, A.
Masses = Masses.groupby('A')
# Find the rows of the grouped DataFrame with the maximum binding energy.
Masses = Masses.apply(lambda t: t[t.Ebinding==t.Ebinding.max()])
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Input [0;32mIn [8][0m, in [0;36m<cell line: 2>[0;34m()[0m
[1;32m      1[0m [38;5;66;03m# Read the experimental data with Pandas[39;00m
[0;32m----> 2[0m Masses [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_fwf[49m[43m([49m[43minfile[49m[43m,[49m[43m [49m[43musecols[49m[38;5;241;43m=[39;49m[43m([49m[38;5;241;43m2[39;49m[43m,[49m[38;5;241;43m3[39;49m[43m,[49m[38;5;241;43m4[39;49m[43m,[49m[38;5;241;43m6[39;49m[43m,[49m[38;5;241;43m11[39;49m[43m)[49m[43m,[49m
[1;32m      3[0m [43m              [49m[43mnames[49m[38;5;241;43m=[39;49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mN[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mZ[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mA[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mElement[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mEbinding[39;49m[38;5;124;43m'[39;49m[43m)[49m[43m,[49m
[1;32m      4[0m [43m              [49m[43mwidths[49m[38;5;241;43m=[39;49m[43m([49m[38;5;241;43m1[39;49m[43m,[49m[38;5;241;43m3[39;49m[43m,[49m[38;5;241;43m5[39;49m[43m,[49m[38;5;241;43m5[39;49m[43m,[49m[38;5;241;43m5[39;49m[43m,[49m[38;5;241;43m1[39;49m[43m,[49m[38;5;241;43m3[39;49m[43m,[49m[38;5;241;43m4[39;49m[43m,[49m[38;5;241;43m1[39;49m[43m,[49m[38;5;241;43m13[39;49m[43m,[49m[38;5;241;43m11[39;49m[43m,[49m[38;5;241;43m11[39;49m[43m,[49m[38;5;241;43m9[39;49m[43m,[49m[38;5;241;43m1[39;49m[43m,[49m[38;5;241;43m2[39;49m[43m,[49m[38;5;241;43m11[39;49m[43m,[49m[38;5;241;43m9[39;49m[43m,[49m[38;5;241;43m1[39;49m[43m,[49m[38;5;241;43m3[39;49m[43m,[49m[38;5;241;43m1[39;49m[43m,[49m[38;5;241;43m12[39;49m[43m,[49m[38;5;241;43m11[39;49m[43m,[49m[38;5;241;43m1[39;49m[43m)[49m[43m,[49m
[1;32m      5[0m [43m              [49m[43mheader[49m[38;5;241;43m=[39;49m[38;5;241;43m39[39;49m[43m,[49m
[1;32m      6[0m [43m              [49m[43mindex_col[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m
[1;32m      8[0m [38;5;66;03m# Extrapolated values are indicated by '#' in place of the decimal place, so[39;00m
[1;32m      9[0m [38;5;66;03m# the Ebinding column won't be numeric. Coerce to float and drop these entries.[39;00m
[1;32m     10[0m Masses[[38;5;124m'[39m[38;5;124mEbinding[39m[38;5;124m'[39m] [38;5;241m=[39m pd[38;5;241m.[39mto_numeric(Masses[[38;5;124m'[39m[38;5;124mEbinding[39m[38;5;124m'[39m], errors[38;5;241m=[39m[38;5;124m'[39m[38;5;124mcoerce[39m[38;5;124m'[39m)

File [0;32m~/miniforge3/envs/myenv/lib/python3.9/site-packages/pandas/util/_decorators.py:311[0m, in [0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    305[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(args) [38;5;241m>[39m num_allow_args:
[1;32m    306[0m     warnings[38;5;241m.[39mwarn(
[1;32m    307[0m         msg[38;5;241m.[39mformat(arguments[38;5;241m=[39marguments),
[1;32m    308[0m         [38;5;167;01mFutureWarning[39;00m,
[1;32m    309[0m         stacklevel[38;5;241m=[39mstacklevel,
[1;32m    310[0m     )
[0;32m--> 311[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniforge3/envs/myenv/lib/python3.9/site-packages/pandas/io/parsers/readers.py:871[0m, in [0;36mread_fwf[0;34m(filepath_or_buffer, colspecs, widths, infer_nrows, **kwds)[0m
[1;32m    869[0m                     len_index [38;5;241m=[39m [38;5;28mlen[39m(index_col)
[1;32m    870[0m         [38;5;28;01mif[39;00m [38;5;28mlen[39m(names) [38;5;241m+[39m len_index [38;5;241m!=[39m [38;5;28mlen[39m(colspecs):
[0;32m--> 871[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mLength of colspecs must match length of names[39m[38;5;124m"[39m)
[1;32m    873[0m kwds[[38;5;124m"[39m[38;5;124mcolspecs[39m[38;5;124m"[39m] [38;5;241m=[39m colspecs
[1;32m    874[0m kwds[[38;5;124m"[39m[38;5;124minfer_nrows[39m[38;5;124m"[39m] [38;5;241m=[39m infer_nrows

[0;31mValueError[0m: Length of colspecs must match length of names
ValueError: Length of colspecs must match length of names

